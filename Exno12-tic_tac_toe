def print_board(board):
    for row in board:
        print("|".join(row))
        print("-----")

def check_winner(board, player):
    # Check rows
    for row in board:
        if all(cell == player for cell in row):
            return True

    # Check columns
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True

    # Check diagonals
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True

    return False

def is_board_full(board):
    return all(cell != ' ' for row in board for cell in row)

def main():
    board = [[' ' for _ in range(3)] for _ in range(3)]
    players = ['X', 'O']
    turn = 0

    print("Welcome to Tic Tac Toe!")
    print_board(board)

    while not (check_winner(board, 'X') or check_winner(board, 'O')) and not is_board_full(board):
        current_player = players[turn % 2]

        while True:
            try:
                row = int(input(f"Player {current_player}, enter row (1-3): ")) - 1
                col = int(input(f"Player {current_player}, enter column (1-3): ")) - 1
                if board[row][col] == ' ':
                    board[row][col] = current_player
                    break
                else:
                    print("That cell is already taken. Try again.")
            except (ValueError, IndexError):
                print("Invalid input. Please enter numbers between 1 and 3.")

        print_board(board)
        turn += 1

    if check_winner(board, 'X'):
        print("Player X wins!")
    elif check_winner(board, 'O'):
        print("Player O wins!")
    else:
        print("It's a tie!")

if __name__ == "__main__":
    main()
